@model List<Message>

<style>
    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
    }

    th {
        background-color: #f2f2f2;
        text-align: center;
    }

    .id {
        text-align: center;
    }

    h1 {
        text-align: center;
        font-size: 50px;
        font-weight: 400;
        margin-bottom: 30px;
    }

    input {
        border-radius: 10%;
    }

    button {
        border-radius: 10%;
    }
</style>
<h1>Актуальные сообщения</h1>
<table>
    <thead>
        <tr>
            <th>Номер записи</th>
            <th>Текст сообщения</th>
            <th>Имя пользователя</th>
            <th>Дата</th>
            <th>Ответить на сообщение</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var entity in Model)
        {
            <tr>
                <td class="id">@entity.Id</td>
                <td>@entity.Text</td>
                <td>@entity.UserName</td>
                <td>@entity.Date</td>
                <td>
                    <input id="inputValue" placeholder="Введите текст">
                    <button type="button" onclick="sendDataToServer(@entity.MessageId)">Отправить</button>
                    <input type="hidden" id="entityId" value="@entity.MessageId">
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function sendDataToServer(entityId) {
        // Получите значение из input
        const inputValue = document.getElementById('inputValue').value;

        // Получите значение entity.MessageId из скрытого input
        const entityIdValue = document.getElementById('entityId').value;

        // Выполните AJAX-запрос на сервер
        $.ajax({
            type: 'POST',
            url: '/AllMessagesFromDatabase/MyButton_Click',
            data: {
                entityId: entityIdValue,
                inputValue: inputValue
            },
            success: function (response) {
                // Обработка успешного ответа от сервера
                console.log(response);
            },
            error: function (error) {
                // Обработка ошибки
                console.error(error);
            }
        });
    }
</script>
